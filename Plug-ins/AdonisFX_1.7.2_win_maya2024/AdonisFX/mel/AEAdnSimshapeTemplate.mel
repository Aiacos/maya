global proc AEAdnSimshapeMaterialsNew( string $attrName )
{
  // Create an option menu for materials.
  attrEnumOptionMenuGrp
    -l "Material"
    -annotation ("Defines the solver stiffness:" +
                 "\nFat 1e+3;\nMuscle 5e+3;\nRubber 1e+6;\nTendon 5e+7;" +
                 "\nLeather 1e+8;\nWood 6e+9;\nConcrete 2.5e+10;\nSkin 12e3.")
    -columnAlign 1 "right"
    -at $attrName
    AdnSimshapeMaterialsEnumOptionMenu;
}

global proc AEAdnSimshapeAttractionRemapNew( string $attrName )
{
  // Create an option menu for attraction remap modes.
  attrEnumOptionMenuGrp
    -l "Attraction Remap Mode"
    -annotation "Remap mode used to compute the definitive attraction values."
    -columnAlign 1 "right"
    -at $attrName
    AdnSimshapeAttractionRemapEnumOptionMenu;
}

global proc AEAdnSimshapeMaterialsReplace( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Disable the material option menu if the attribute is not present.
  if ( `attributeQuery -node $nodeName[0] -exists "material"` )
    attrEnumOptionMenuGrp -e -enable true -attribute $attrName AdnSimshapeMaterialsEnumOptionMenu;
  else
    attrEnumOptionMenuGrp -e -enable false AdnSimshapeMaterialsEnumOptionMenu;
}

global proc AEAdnSimshapeAttractionRemapReplace( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Disable the material option menu if the attribute is not present.
  if ( `attributeQuery -node $nodeName[0] -exists "attractionRemapMode"` )
    attrEnumOptionMenuGrp -e -enable true -attribute $attrName AdnSimshapeAttractionRemapEnumOptionMenu;
  else
    attrEnumOptionMenuGrp -e -enable false AdnSimshapeAttractionRemapEnumOptionMenu;
}

global proc AEAdnSimshapeStiffnessMultiplierNew( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Create a custom slider for the stiffness multiplier.
  attrFieldSliderGrp 
    -l "Stiffness Multiplier"
    -annotation "Sets the scaling factor applied to the stiffness."
    -columnAlign 1 "right"
    -at $attrName
    -enable true
    AdnSimshapeStiffnessMultiplierSliderGrp;
}

global proc AEAdnSimshapeStiffnessMultiplierReplace( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Disable de material stiffness multiplier if the attribute is not present.
  if ( `attributeQuery -node $nodeName[0] -exists "stiffnessMultiplier"` )
    attrFieldSliderGrp -e -enable true -attribute $attrName AdnSimshapeStiffnessMultiplierSliderGrp;
  else
    attrFieldSliderGrp -e -enable false AdnSimshapeStiffnessMultiplierSliderGrp;
}

global proc AEAdnSimshapePointMassModeNew( string $attrName )
{
  // Create an option menu for the point mass mode.
  attrEnumOptionMenuGrp
    -l "Point Mass Mode"
    -annotation ("Defines how masses should be used in the solver:" +
                 "\nBy Density estimates the mass value by multiplying the Density * Area." +
                 "\nBy Uniform Value sets a uniform mass value.")
    -columnAlign 1 "right"
    -at $attrName
    AdnSimshapePointMassModeEnumOptionMenu;
}

global proc AEAdnSimshapePointMassModeReplace( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Disable the point mass mode option menu if the attribute is not present.
  if ( `attributeQuery -node $nodeName[0] -exists "pointMassMode"` )
    attrEnumOptionMenuGrp -e -enable true -attribute $attrName AdnSimshapePointMassModeEnumOptionMenu;
  else
    attrEnumOptionMenuGrp -e -enable false AdnSimshapePointMassModeEnumOptionMenu;
}

global proc AEAdnSimshapePointMassChanged( string $nodeName )
{
  // Read the values
  string $attr = ($nodeName + ".pointMassMode");
  int $pointMassMode = `getAttr $attr`;

  // Enable/disable density slider
  if ( `attrFieldSliderGrp -exists "AdnSimshapeDensitySliderGrp"` )
  {
    // NOTE: We have to change this entry if we ever reorder the pointMassMode menu
    $kByDensity = 0;
    attrFieldSliderGrp -e -enable ($pointMassMode == $kByDensity) AdnSimshapeDensitySliderGrp;
  }
}

global proc AEAdnSimshapeDensityNew( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Create a custom slider for the density.
  attrFieldSliderGrp 
    -l "Density"
    -annotation ("Sets the density value in kg/m3 to be able to estimate mass values with By Density mode. " +
                 "The value is internally converted to g/cm3.")
    -columnAlign 1 "right"
    -at $attrName
    -enable true
    AdnSimshapeDensitySliderGrp;
}

global proc AEAdnSimshapeDensityReplace( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Disable de density if the attribute is not present.
  if ( `attributeQuery -node $nodeName[0] -exists "density"` )
    attrFieldSliderGrp -e -enable true -attribute $attrName AdnSimshapeDensitySliderGrp;
  else
    attrFieldSliderGrp -e -enable false AdnSimshapeDensitySliderGrp;
}

global proc AEAdnSimshapeSolverStiffnessNew( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Create a custom slider for the stiffness.
  attrFieldSliderGrp 
    -l "Stiffness"
    -annotation "Sets the custom stiffness value."
    -columnAlign 1 "right"
    -at $attrName
    -enable false
    AdnSimshapeSolverStiffnessSliderGrp;
}

global proc AEAdnSimshapeSolverStiffnessReplace( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Disable de material stiffness if the attribute is not present.
  if ( `attributeQuery -node $nodeName[0] -exists "stiffness"` )
    attrFieldSliderGrp -e -enable true -attribute $attrName AdnSimshapeSolverStiffnessSliderGrp;
  else
    attrFieldSliderGrp -e -enable false AdnSimshapeSolverStiffnessSliderGrp;
}

global proc AEAdnSimshapeShapePreservationStiffnessNew( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Create a custom slider for the stiffness.
  attrFieldSliderGrp
    -l "Shape Preserve Stiffness"
    -annotation ("Sets the override for the shape preservation stiffness to control " +
                 "the amount of shape preservation to be applied (Deprecated).")
    -columnAlign 1 "right"
    -at $attrName
    -enable false
    AdnSimshapeShapePreservationStiffnessSliderGrp;
}

global proc AEAdnSimshapeShapePreservationStiffnessReplace( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Disable de shape preservation stiffness if the attribute is not present.
  if ( `attributeQuery -node $nodeName[0] -exists "stiffnessShapePreservation"` )
    attrFieldSliderGrp -e -enable true -attribute $attrName AdnSimshapeShapePreservationStiffnessSliderGrp;
  else
    attrFieldSliderGrp -e -enable false AdnSimshapeShapePreservationStiffnessSliderGrp;
}

global proc AEAdnSimshapeActivationModeNew( string $attrName )
{
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Read the values
  string $attrMuscleFile = ($nodeName[0] + ".musclesFile");
  string $attrActivationMode = ($nodeName[0] + ".activationMode");
  string $attrActivations = ($nodeName[0] + ".activationList[0].activation");
  string $musclePatchesFile = `getAttr $attrMuscleFile`;
  int $activationMode = `getAttr $attrActivationMode`;
  string $activations[] = `listConnections $attrActivations`;

  // Create a menu
  optionMenu 
    -label "Activation Mode"
    -annotation ("Mode to drive the muscle activations:" +
                 "\nMuscle Patches: an AdonisFX Muscle Patches file (.amp) has to be provided to enable this option;" +
                 "\nPlug Values: the attribute values 'ActivationList.Activation' should be populated to enable this option;" +
                 "\nNo Activation;")
    adnSimshapeActivationMenu;
  menuItem 
    -label "Muscle Patches" 
    -enable ($musclePatchesFile != "" ? true : false) 
    -data 0 
    adnSimshapeActivationMenuOpt0;
  menuItem 
    -label "Plug Values" 
    -enable (size($activations) != 0 ? true : false)
    -data 1
    adnSimshapeActivationMenuOpt1;
  menuItem -label "No Activation" -data 2;

  // Connects specific controls to attributes.
  // Forces the attribute to update the field when it changes.
  // Forces the field to update the attribute when it changes.
  // May be unidirectional.
  connectControl adnSimshapeActivationMenu $attrName;

  // Select the option
  if ($activationMode == 0 && $musclePatchesFile != "") {
    setAttr $attrActivationMode 0;
  } else if ($activationMode == 1 && size($activations) != 0) {
    setAttr $attrActivationMode 1;
  } else {
    setAttr $attrActivationMode 2;
  }
}

global proc AEAdnSimshapeActivationModeReplace( string $attrName )
{
  undoInfo -stateWithoutFlush false;
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  // Read the values
  string $attrMuscleFile = ($nodeName[0] + ".musclesFile");
  string $attrActivationMode = ($nodeName[0] + ".activationMode");
  string $attrActivations = ($nodeName[0] + ".activationList[0].activation");
  string $musclePatchesFile = `getAttr $attrMuscleFile`;
  int $activationMode = `getAttr $attrActivationMode`;
  string $activations[] = `listConnections $attrActivations`;

  // Connect NEW node
  connectControl adnSimshapeActivationMenu $attrName;
  
  // Enable/Disable
  menuItem -e -enable ($musclePatchesFile != "" ? true : false)  adnSimshapeActivationMenuOpt0;
  menuItem -e -enable (size($activations) != 0 ? true : false) adnSimshapeActivationMenuOpt1;

  // Select the option
  if ($activationMode == 0 && $musclePatchesFile != "") {
    setAttr $attrActivationMode 0;
  } else if ($activationMode == 1 && size($activations) != 0) {
    setAttr $attrActivationMode 1;
  } else {
    setAttr $attrActivationMode 2;
  }
  undoInfo -stateWithoutFlush true;
}

global proc AEAdnSimshapeHandleSolverStiffnessUI( string $nodeName )
{
  if ( `attributeQuery -node $nodeName -exists "useCustomStiffness"` )
  {
    $useCustomStiffness = `getAttr ($nodeName + ".useCustomStiffness")`;
    $showCustomStiffness = !$useCustomStiffness;

    // Disable the material stiffness option menu if the custom stiffness is activated.
    if ( `attrEnumOptionMenuGrp -exists "AdnSimshapeMaterialsEnumOptionMenu"` )
      attrEnumOptionMenuGrp -e -enable $showCustomStiffness AdnSimshapeMaterialsEnumOptionMenu;

    // Enable the stiffness multiplier if the custom stiffness is deactivated.
    if ( `attrFieldSliderGrp -exists "AdnSimshapeStiffnessMultiplierSliderGrp"` )
      attrFieldSliderGrp -e -enable $showCustomStiffness AdnSimshapeStiffnessMultiplierSliderGrp;

    // Enable the stiffness if the custom stiffness is activated.
    if ( `attrFieldSliderGrp -exists "AdnSimshapeSolverStiffnessSliderGrp"` )
      attrFieldSliderGrp -e -enable $useCustomStiffness AdnSimshapeSolverStiffnessSliderGrp;
  }
}

global proc AEAdnSimshapeHandleShapePreservationStiffnessUI( string $nodeName )
{
  if ( `attributeQuery -node $nodeName -exists "overrideShapePreservationStiffness"` )
  {
    $overrideShapePreservationStiffness = `getAttr ($nodeName + ".overrideShapePreservationStiffness")`;
    $showShapePreservationStiffness = $overrideShapePreservationStiffness;

    // Enable the shape preservation stiffness slider if the override checkbox is activated.
    if ( `attrFieldSliderGrp -exists "AdnSimshapeShapePreservationStiffnessSliderGrp"` )
      attrFieldSliderGrp -e -enable $showShapePreservationStiffness AdnSimshapeShapePreservationStiffnessSliderGrp;
  }
}

global proc AEAdnSimshapeDebugColorChanged(string $nodeName)
{
  // Callback method for the color widget on the attribute template.
  // Will update the deformer values based on the widget.
  float $rgbValues[];
  $rgbValues = `colorSliderGrp -q -rgb AdnSimshapeDebugColorWidgetGrp`;

  setAttr ($nodeName + ".debugColorRed")   $rgbValues[0];
  setAttr ($nodeName + ".debugColorGreen") $rgbValues[1];
  setAttr ($nodeName + ".debugColorBlue")  $rgbValues[2];
}

global proc AEAdnSimshapeDebugColorNew( string $attrName )
{
  // This method is called when the attribute editor is opened the first time.
  // Creates a color slider group.
  // Assigns callback method to color slider group and defaults to a red color.
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  string $changeCommand = ("AEAdnSimshapeDebugColorChanged(\"" + $nodeName[0] + "\")");

  colorSliderGrp
    -l "Color"
    -annotation "Set the draw color for debug purposes."
    -rgb 1 0 0
    -cc $changeCommand
    AdnSimshapeDebugColorWidgetGrp;
}

global proc AEAdnSimshapeDebugColorReplace( string $attrName )
{
  // Method called everytime we change between deformers of the same type.
  // Will update the references to now update the new deformer.
  string $nodeName[];
  tokenize($attrName, ".", $nodeName);

  string $changeCommand = ("AEAdnSimshapeDebugColorChanged(\"" + $nodeName[0] + "\")");
  float $component_r = `getAttr ($nodeName[0] + ".debugColorRed")`;
  float $component_g = `getAttr ($nodeName[0] + ".debugColorGreen")`;
  float $component_b = `getAttr ($nodeName[0] + ".debugColorBlue")`;

  colorSliderGrp
    -e
    -rgb $component_r $component_g $component_b
    -cc $changeCommand
    AdnSimshapeDebugColorWidgetGrp;
}

global proc AEAdnSimshapeMusclesFileChanged( string $nodeName )
{
  // Read the values
  string $attrMuscleFile = ($nodeName + ".musclesFile");
  string $attrActivationMode = ($nodeName + ".activationMode");
  string $musclePatchesFile = `getAttr $attrMuscleFile`;
  int $activationMode = `getAttr $attrActivationMode`;

  // Enable/disable
  if ($musclePatchesFile != "") {
    menuItem -e -enable true adnSimshapeActivationMenuOpt0;
  } else {
    menuItem -e -enable false adnSimshapeActivationMenuOpt0;
    // Change menu option
    if ($activationMode == 0) {
      setAttr $attrActivationMode 2;
    }
  }
}

global proc AEAdnSimshapeActivationsChanged( string $nodeName )
{
  // Needed delete behaviour when disconnected. So when the plugs are
  // disconnected this method gets called.

  // Read the values
  string $attrActivationMode = ($nodeName + ".activationMode");
  int $activationMode = `getAttr $attrActivationMode`;
  string $attrActivations = ($nodeName + ".activationList[0].activation");
  string $activations[] = `listConnections $attrActivations`;

  // Enable/disable
  if (size($activations) != 0) {
    menuItem -e -enable true adnSimshapeActivationMenuOpt1;
  } else {
    menuItem -e -enable false adnSimshapeActivationMenuOpt1;
    // Change menu option
    if ($activationMode == 1) {
      setAttr $attrActivationMode 2;
    }
  }
}

global proc AEAdnSimshapeTemplate ( string $nodeName )
{
  editorTemplate -beginScrollLayout;

    // Solver Attributes section
    editorTemplate -beginLayout "Solver Attributes" -collapse 0;
      editorTemplate -label "Enable"
        -annotation "Flag to toggle the solver execution."
        -addControl "enable";
      editorTemplate -label "Iterations"
        -annotation ("Sets the number of solver iterations." +
                     "\nHigher values produce more accurate results but may impact the performance.")
        -addControl "iterations";
      editorTemplate -callCustom 
        "AEAdnSimshapeMaterialsNew"
        "AEAdnSimshapeMaterialsReplace" 
        "material";
      editorTemplate -callCustom 
        "AEAdnSimshapeStiffnessMultiplierNew"
        "AEAdnSimshapeStiffnessMultiplierReplace"
        "stiffnessMultiplier";
    editorTemplate -endLayout;

    // Muscles section
    editorTemplate -beginLayout "Muscles Activation Settings" -collapse 0;
      editorTemplate -callCustom
        "AEAdnSimshapeActivationModeNew"
        "AEAdnSimshapeActivationModeReplace" 
        "activationMode";
      editorTemplate -label "Muscles Patches File"
        -annotation "Path to the AdonisFX Muscle Patches file (.amp)."
        -addControl "musclesFile" "AEAdnSimshapeMusclesFileChanged";
      editorTemplate -label "Activation Smoothing"
        -annotation "Number of iterations for the activation smoothing algorithm."
        -addControl "activationSmoothing";
      editorTemplate -label "Bidirectional Activation"
        -annotation "Toggles muscle activations in the positive and negative directions of the muscle patches fibers."
        -interruptOptimize
        -addControl "bidirectionalActivation";
      editorTemplate -label "Write Out Activation"
        -annotation "Toggles the outputting of the activation levels on the plug 'OutActivationList.OutActivation'."
        -interruptOptimize
        -addControl "writeOutActivation";
    editorTemplate -endLayout;

    editorTemplate -beginLayout "Time Attributes" -collapse 0;
      editorTemplate -label "Preroll Start Time"
        -annotation "Sets the frame at which the preroll begins. The preroll ends at Start Time."
        -addControl "prerollStartTime";
      editorTemplate -label "Start Time"
        -annotation "Determines the frame at which the simulation starts."
        -addControl "startTime";
      editorTemplate -label "Current Time"
        -annotation "Current frame of the simulation."
        -addControl "currentTime";
    editorTemplate -endLayout;

    editorTemplate -beginLayout "Scale Attributes";
      editorTemplate -label "Time Scale"
        -annotation "Sets the scaling factor applied to the simulation time step."
        -addControl "timeScale";
      editorTemplate -label "Space Scale"
        -annotation "Sets the scaling factor applied to the masses and/or the forces."
        -addControl "spaceScale";
      editorTemplate -label "Space Scale Mode"
        -annotation "Determines if the spatial scaling affects the masses, the forces, or both."
        -addControl "spaceScaleMode";
    editorTemplate -endLayout;

    editorTemplate -beginLayout "Gravity";
      editorTemplate -label "Gravity"
        -annotation "Sets the magnitude in m/s2 of the gravity acceleration. The value is internally converted to cm/s2."
        -addControl "gravity";
      editorTemplate -label "Gravity Direction"
        -annotation "Sets the direction of the gravity acceleration."
        -addControl "gravityDirection";
    editorTemplate -endLayout;

    // Advanced Settings section
    editorTemplate -beginLayout "Advanced Settings" -collapse 1;
      // Advanced Initialization Settings subsection
      editorTemplate -beginLayout "Initialization Settings" -collapse 1;
        editorTemplate -label "Shape Preservation At Start Time"
          -annotation ("Initialize Shape Preservation Constraints on start time.")
          -interruptOptimize
          -addControl "initShapePreservationAtStartTime";
        editorTemplate -label "Slide Collision At Start Time"
          -annotation ("Initialize Slide Collision Constraints on start time.")
          -interruptOptimize
          -addControl "initSlideCollisionAtStartTime";
        editorTemplate -label "Animatable Rest Mesh"
          -annotation "Flag that enables reading animated rest mesh data."
          -interruptOptimize
          -addControl "animatableRestMesh";
        editorTemplate -label "Initialize to Anim Mesh"
          -annotation "Flag to instantiate points at animated mesh instead of rest mesh on initialization."
          -interruptOptimize
          -addControl "initializeToAnimMesh";
      editorTemplate -endLayout;
      // Advanced Stiffness Parameters subsection
      editorTemplate -beginLayout "Stiffness Settings" -collapse 1;
        editorTemplate -label "Use Custom Stiffness"
          -annotation ("Toggles the use of a custom stiffness value." +
                       "\nIf enabled, the Material stiffness value is ignored and the " +
                       "Stiffness attribute below is used instead.")
          -addControl "useCustomStiffness" "AEAdnSimshapeHandleSolverStiffnessUI";
        editorTemplate -callCustom
          "AEAdnSimshapeSolverStiffnessNew"
          "AEAdnSimshapeSolverStiffnessReplace"
          "stiffness";
        editorTemplate -label "Override Shape Preserve Stiffness (Deprecated)"
          -annotation ("Override the shape preservation stiffness with a custom value. If off it will use " +
                       "either the material stiffness or the custom stiffness value (Deprecated).")
          -addControl "overrideShapePreservationStiffness" "AEAdnSimshapeHandleShapePreservationStiffnessUI";
        editorTemplate -callCustom
          "AEAdnSimshapeShapePreservationStiffnessNew"
          "AEAdnSimshapeShapePreservationStiffnessReplace"
          "stiffnessShapePreservation";
      editorTemplate -endLayout;
      // Advanced Override Stiffness subsection
      editorTemplate -beginLayout "Override Constraint Stiffness" -collapse 1;
        editorTemplate -label "Solver Stiffness"
          -annotation "Global stiffness currently used by the solver."
          -addControl "outputSolverStiffness";
        editorTemplate -label "Distance Constraints"
          -annotation "If its value is equal or greater than 0.0, it will override the global stiffness for distance constraints."
          -addControl "distanceStiffnessOverride";
        editorTemplate -label "Shape Preservation"
          -annotation "If its value is equal or greater than 0.0, it will override the global stiffness for shape preservation constraints. This value is only considered if the 'Override Shape Preserve Stiffness' checkbox is disabled."
          -addControl "shapeStiffnessOverride";
        editorTemplate -label "Slide Collision Constraints"
          -annotation "If its value is equal or greater than 0.0, it will override the global stiffness for slide collision constraints."
          -addControl "slideCollisionStiffnessOverride";
      editorTemplate -endLayout;
      editorTemplate -beginLayout "Mass Properties" -collapse 1;
        // Advanced Mass Properties subsection
        editorTemplate
          -addControl "pointMassMode" "AEAdnSimshapePointMassChanged"
          -suppress
          -callCustom "AEAdnSimshapePointMassModeNew" "AEAdnSimshapePointMassModeReplace" "pointMassMode";
        editorTemplate -callCustom 
          "AEAdnSimshapeDensityNew"
          "AEAdnSimshapeDensityReplace"
          "density";
        editorTemplate -label "Global Mass Multiplier"
          -annotation "Sets the scaling factor applied to the mass of every point."
          -addControl "globalMassMultiplier";
      editorTemplate -endLayout;
      editorTemplate -beginLayout "Dynamic Properties" -collapse 1;
        editorTemplate -label "Triangulate Mesh"
          -annotation ("Use the internally triangulated mesh to build constraints.")
          -addControl "triangulateMesh";
        editorTemplate -label "Global Damp. Multiplier"
          -annotation "Sets the scaling factor applied to the global damping of every point."
          -addControl "globalDampingMultiplier";
        editorTemplate -label "Inertia Damper"
          -annotation "Sets the linear damping applied to the dynamics of every point.\nRange 0 to 1."
          -addControl "inertiaDamper";
        editorTemplate -label "Rest Length Multiplier"
          -annotation "Sets the scaling factor applied to the edge lengths at rest."
          -addControl "restLengthMultiplier";
        editorTemplate -label "Compression Multiplier"
          -annotation "Sets the scaling factor applied to the compression resistance of every point."
          -addControl "compressionMultiplier";
        editorTemplate -label "Stretching Multiplier"
          -annotation "Sets the scaling factor applied to the stretching resistance of every point."
          -addControl "stretchingMultiplier";
        editorTemplate -label "Attenuation Vel. Factor"
          -annotation ("Sets the attenuation factor that drives how much velocity attenuation is" +
                       "\napplied based on a matrix provided to the plug 'AttenuationMatrix'.\nRange 0 to 1.")
          -addControl "attenuationVelocityFactor";
      editorTemplate -endLayout;
      editorTemplate -beginLayout "Collision Settings" -collapse 1;
        editorTemplate -label "Compute Collisions"
          -annotation "Flag to enable collisions correction."
          -interruptOptimize
          -addControl "computeCollisions";
        editorTemplate -label "Keep Orientation"
          -annotation "Flag to preserve the initial orientation of the vertices relative to the collider when handling collisions."
          -interruptOptimize
          -addControl "keepCollisionOrientation";
        editorTemplate -label "Max Sliding Distance"
          -annotation "Maximum distance the simulated vertex is allowed to slide on top of the collider in world units."
          -addControl "maxCollisionSlidingDistance";
      editorTemplate -endLayout;
      editorTemplate -beginLayout "Attraction Settings" -collapse 1;
        editorTemplate -label "Attraction Multiplier"
          -annotation "Sets the scaling factor applied to the Attraction. Range 0 to 2."
          -addControl "attractionMultiplier";
        editorTemplate -callCustom
          "AEAdnSimshapeAttractionRemapNew"
          "AEAdnSimshapeAttractionRemapReplace"
          "attractionRemapMode";
      editorTemplate -endLayout;
      // Activation Remap
      AEaddRampControl($nodeName + ".activationRemap");
    editorTemplate -endLayout;

    // Debug section
    editorTemplate -beginLayout "Debug" -collapse 1;
      editorTemplate -label "Debug"
        -annotation "Toggles visualization of debugger."
        -addControl "debug";
      editorTemplate -label "Feature"
        -annotation "Sets the feature to debug."
        -addControl "debugFeature";
      editorTemplate -label "Width Scale"
        -annotation "Sets the scaling factor applied to the width of the debug lines."
        -addControl "debugWidth";
      editorTemplate -callCustom
        "AEAdnSimshapeDebugColorNew"
        "AEAdnSimshapeDebugColorReplace"
        "debugColor";
      editorTemplate -beginLayout "Debug Muscle Fibers" -collapse 1;
        editorTemplate -label "Muscle Fibers Scale"
          -annotation "Sets the scaling factor applied to the length of the debug fiber lines."
          -addControl "debugMuscleFibersScale";
      editorTemplate -endLayout;
    editorTemplate -endLayout;

    // Deformer Attributes section
    editorTemplate -beginLayout "Deformer Attributes" -collapse 1;
      editorTemplate -label "Envelope" -addControl "envelope";
    editorTemplate -endLayout;

    editorTemplate -addExtraControls;

    // Suppressed attributes. From here all attributes will be suppressed.
    // Suppressed attributes will not appear on the editor. Can be useful
    // for triggering or accesing specific attributes.

    // This auxiliar control field represents the activationList.
    // It has a procedure associated that gets triggered whenever the 
    // attribute changes. In this way the combo box gets updated accordingly.
    editorTemplate -label "Activations" 
    -suppress 
    -addControl "activationList" 
    "AEAdnSimshapeActivationsChanged";

  editorTemplate -endScrollLayout;
}
